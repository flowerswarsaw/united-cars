services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: united-cars-db-staging
    restart: unless-stopped
    environment:
      POSTGRES_DB: united_cars
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d united_cars"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - united-cars

  # Redis Cache & Sessions
  redis:
    image: redis:7-alpine
    container_name: united-cars-redis-staging
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - united-cars

  # Database Migration Runner
  migrate:
    image: ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}
    container_name: united-cars-migrate-staging
    environment:
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@db:5432/united_cars?schema=public&sslmode=disable
      NODE_ENV: staging
    command: >
      sh -c "
        echo 'Waiting for database to be ready...'
        while ! nc -z db 5432; do sleep 1; done
        echo 'Running database migrations...'
        pnpm db:migrate:deploy
        echo 'Migration completed successfully'
      "
    depends_on:
      db:
        condition: service_healthy
    networks:
      - united-cars

  # Next.js Web Application
  web:
    image: ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}
    container_name: united-cars-web-staging
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@db:5432/united_cars?schema=public&sslmode=disable
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: https://${DOMAIN}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # Application settings
      APP_NAME: "United Cars (Staging)"
      APP_VERSION: ${IMAGE_TAG}
      BUILD_ID: ${IMAGE_TAG}
      COMMIT_SHA: ${COMMIT_SHA}
      
      # Security settings (staging)
      HTTPS_REDIRECT: true
      HSTS_ENABLED: true
      CSP_ENABLED: true
      CSRF_PROTECTION: true
      RATE_LIMIT_ENABLED: true
      
      # File upload settings
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: /app/uploads
      ALLOWED_MIME_TYPES: "image/jpeg,image/png,image/webp,application/pdf"
      
      # Monitoring
      LOG_LEVEL: info
      ENABLE_METRICS: true
      SENTRY_DSN: ${SENTRY_DSN}
      
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    ports:
      - "127.0.0.1:3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - united-cars

  # Caddy Reverse Proxy
  caddy:
    image: caddy:2-alpine
    container_name: united-cars-caddy-staging
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - uploads:/var/www/uploads:ro
      - logs:/var/log/caddy
    depends_on:
      web:
        condition: service_healthy
    networks:
      - united-cars

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  uploads:
    driver: local
  logs:
    driver: local

networks:
  united-cars:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16